{"name": "Авторизация курьера без пароля", "status": "failed", "statusDetails": {"message": "AssertionError: assert (400 == 400 and '{\"code\":400,\"message\":\"Недостаточно данных для входа\"}' == {'message': 'Недостаточно данных для входа'})\n +  where 400 = <Response [400]>.status_code\n +  and   '{\"code\":400,\"message\":\"Недостаточно данных для входа\"}' = <Response [400]>.text", "trace": "self = <tests.TestLoginCourier object at 0x108d62710>, create_courier = ['hcsplbjolx', 'lhqwrdunvd', 'ulpixlnupc']\n\n    @allure.title('Авторизация курьера без пароля')\n    def test_authorization_without_password(self, create_courier):\n        new_courier = create_courier\n        courier_without_pass = {\n            \"login\": new_courier[0],\n            \"password\": \"\",\n            \"firstName\": new_courier[2]\n        }\n        response = requests.post('https://qa-scooter.praktikum-services.ru/api/v1/courier/login',\n                                 data=courier_without_pass)\n>       assert response.status_code == 400 and response.text == {\"message\":  \"Недостаточно данных для входа\"}\nE       assert (400 == 400 and '{\"code\":400,\"message\":\"Недостаточно данных для входа\"}' == {'message': 'Недостаточно данных для входа'})\nE        +  where 400 = <Response [400]>.status_code\nE        +  and   '{\"code\":400,\"message\":\"Недостаточно данных для входа\"}' = <Response [400]>.text\n\ntests.py:137: AssertionError"}, "start": 1698865451531, "stop": 1698865451598, "uuid": "64b710fd-876d-4849-8ee7-756fa692bc91", "historyId": "3bc07091860bb7f7f7dfbf23d2dc9c14", "testCaseId": "3bc07091860bb7f7f7dfbf23d2dc9c14", "fullName": "tests.TestLoginCourier#test_authorization_without_password", "labels": [{"name": "suite", "value": "tests"}, {"name": "subSuite", "value": "TestLoginCourier"}, {"name": "host", "value": "MacBook-Pro-Sabina.local"}, {"name": "thread", "value": "29447-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests"}]}