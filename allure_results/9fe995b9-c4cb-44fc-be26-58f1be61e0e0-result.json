{"name": "Авторизация курьера без логина", "status": "failed", "statusDetails": {"message": "AssertionError: assert (400 == 400 and '{\"code\":400,\"message\":\"Недостаточно данных для входа\"}' == {'message': 'Недостаточно данных для входа'})\n +  where 400 = <Response [400]>.status_code\n +  and   '{\"code\":400,\"message\":\"Недостаточно данных для входа\"}' = <Response [400]>.text", "trace": "self = <tests.TestLoginCourier object at 0x108d61ed0>, create_courier = ['pspxumpkux', 'xywidvorqr', 'ezgtkscjpp']\n\n    @allure.title('Авторизация курьера без логина')\n    def test_authorization_without_login(self, create_courier):\n        new_courier = create_courier\n        courier_without_log = {\n            \"login\": \"\",\n            \"password\": new_courier[1],\n            \"firstName\": new_courier[2]\n        }\n        response = requests.post('https://qa-scooter.praktikum-services.ru/api/v1/courier/login',\n                                 data=courier_without_log)\n>       assert response.status_code == 400 and response.text == {\"message\":  \"Недостаточно данных для входа\"}\nE       assert (400 == 400 and '{\"code\":400,\"message\":\"Недостаточно данных для входа\"}' == {'message': 'Недостаточно данных для входа'})\nE        +  where 400 = <Response [400]>.status_code\nE        +  and   '{\"code\":400,\"message\":\"Недостаточно данных для входа\"}' = <Response [400]>.text\n\ntests.py:125: AssertionError"}, "start": 1698865451163, "stop": 1698865451230, "uuid": "ebf2751d-eb2b-4a13-bdd2-7ac063da9d53", "historyId": "a82746fa397fba068df5e0be7efed76c", "testCaseId": "a82746fa397fba068df5e0be7efed76c", "fullName": "tests.TestLoginCourier#test_authorization_without_login", "labels": [{"name": "suite", "value": "tests"}, {"name": "subSuite", "value": "TestLoginCourier"}, {"name": "host", "value": "MacBook-Pro-Sabina.local"}, {"name": "thread", "value": "29447-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests"}]}